1. What are escape characters?
Ans- 	Escape characters are special characters preceded by a backslash (\) in a string to represent characters that are difficult to input directly, such as newline (\n) or tab (\t).


2. What do the \n and \t escape characters represent?
Ans-	\n represents a newline character, and \t represents a tab character.


3. How can you put a \ backslash character in a string?
Ans-	 To include a backslash in a string, use a double backslash (\\).


4. The string value "Howl's Moving Castle" is a valid string. Why isn’t it a problem that the single quote character in the word Howl's isn’t escaped?
Ans-	It's not an issue because the string is enclosed in double quotes. Single quotes can be used without escaping within double-quoted strings.


5. If you don’t want to put \n in your string, how can you write a string with newlines in it?
Ans	Use triple-quoted strings ("""...""") to include newlines without explicitly using \n.

6. What do the following expressions evaluate to?
   - 'Hello, world!'[1] - 'e'
   - 'Hello, world!'[0:5] - 'Hello'
   - 'Hello, world!'[:5] - 'Hello'
   - 'Hello, world!'[3:] - 'lo, world!'

7. What do the following expressions evaluate to?
   - 'Hello'.upper() - 'HELLO'
   - 'Hello'.upper().isupper() - True
   - 'Hello'.upper().lower() - 'hello'

8. What do the following expressions evaluate to?
   - 'Remember, remember, the fifth of November.'.split() - ['Remember,', 'remember,', 'the', 'fifth', 'of', 'November.']
   - '-'.join('There can be only one.'.split()) - 'There-can-be-only-one.'

9. What string methods can you use to right-justify, left-justify, and center a string?
Ans-
     - Right-justify: `str.rjust(width)`
     - Left-justify: `str.ljust(width)`
     - Center: `str.center(width)`

10. How can you trim whitespace characters from the beginning or end of a string?
Ans- 	Use `str.strip()` to trim whitespace from both ends of a string.
